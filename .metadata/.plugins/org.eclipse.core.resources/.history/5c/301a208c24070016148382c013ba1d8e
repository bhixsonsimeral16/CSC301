package autoCompleteMe;
import edu.princeton.cs.algs4.MergeX;


public class Autocomplete {
	private final int N;
	private final Term[] autoComplete;
	
	// Initializes the data structure from the given array of terms.
    public Autocomplete(Term[] terms){
    	this.N = terms.length;
    	this.autoComplete = new Term[N];
    	MergeX.sort(terms, Term.byReverseWeightOrder());
    	MergeX.sort(terms);
    	for(int i = 0; i < N; i++){
    		this.autoComplete[i] = terms[i];
    	}
    }

    // Returns all terms that start with the given prefix, in descending order of weight.
    public Term[] allMatches(String prefix){
    	int first = firstIndexOf(this.autoComplete, prefix, Term.byPrefixOrder(prefix.length()));
    	int last = lastIndexOf(this.autoComplete, prefix, Term.byPrefixOrder(prefix.length()));
    	
    	Term[] terms = new Term[last - first];
    	for(int i = 0; i < last-first; i++){
    		terms[i] = this.autoComplete[first+i];
    	}
    	return terms;
    }

    // Returns the number of terms that start with the given prefix.
    public int numberOfMatches(String prefix){
    	int first = firstIndexOf(this.autoComplete, prefix, Term.byPrefixOrder(prefix.length()));
    	int last = lastIndexOf(this.autoComplete, prefix, Term.byPrefixOrder(prefix.length()));
    	return last + 1 - first;
    }
}
